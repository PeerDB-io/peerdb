name: Dev Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  docker-build:
    strategy:
      matrix:
        # ubuntu-latest leverages larger GH runner pool & completes in ~30s instead of ~3m
        runner: [ubuntu-latest]
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: bufbuild/buf-setup-action@v1.29.0-1
      - uses: dtolnay/rust-toolchain@stable
      - name: install protobuf plugins and generate protos
        id: install-protobuf-plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.34
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2.20.0
          npm install ts-proto
          cargo install protoc-gen-prost protoc-gen-tonic protoc-gen-prost-serde
          PATH="$(go env GOPATH)/bin:$HOME/.cargo/bin:$PATH" buf generate --template buf.gen-local.yaml --debug protos

      - uses: depot/setup-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Set Short Commit Hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build (optionally publish) PeerDB Images
        uses: depot/bake-action@v1
        with:
          token: ${{ secrets.DEPOT_TOKEN }}
          files: ./docker-bake.hcl
          push: ${{ github.ref == 'refs/heads/main' }}
        env:
          SHA_SHORT: dev-${{ steps.vars.outputs.sha_short }}
          TAG: latest-dev
