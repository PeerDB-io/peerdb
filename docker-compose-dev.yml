version: "3.9"

x-catalog-config: &catalog-config
  PEERDB_CATALOG_HOST: catalog
  PEERDB_CATALOG_PORT: 5432
  PEERDB_CATALOG_USER: postgres
  PEERDB_CATALOG_PASSWORD: postgres
  PEERDB_CATALOG_DATABASE: postgres

x-flow-worker-env: &flow-worker-env
  # For Temporal Cloud, this will look like: 
  # <yournamespace>.<id>.tmprl.cloud:7233
  TEMPORAL_HOST_PORT: temporal:7233
  PEERDB_TEMPORAL_NAMESPACE: default
  # For the below 2 cert and key variables,
  # use yml multiline syntax with '|'
  TEMPORAL_CLIENT_CERT:
  TEMPORAL_CLIENT_KEY:
  # For GCS, these will be your HMAC keys instead
  # For more information:
  # https://cloud.google.com/storage/docs/authentication/managing-hmackeys
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
  # For GCS, set this to "auto" without the quotes
  AWS_REGION: ${AWS_REGION:-}
  # For GCS, set this as: https://storage.googleapis.com
  AWS_ENDPOINT: ${AWS_ENDPOINT:-}
  # enables worker profiling using Grafana Pyroscope
  ENABLE_PROFILING: "true"
  PYROSCOPE_SERVER_ADDRESS: http://pyroscope:4040

services:
  catalog:
    container_name: catalog
    image: debezium/postgres:16-alpine
    ports:
      - 9901:5432
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 60s

  temporal:
    container_name: temporal
    depends_on:
      catalog:
        condition: service_healthy
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=postgres
      - POSTGRES_SEEDS=catalog
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.22
    ports:
      - 7233:7233
    volumes:
      - ./temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
    labels:
      kompose.volume.type: configMap

  pyroscope:
    container_name: pyroscope
    image: grafana/pyroscope:latest
    ports:
      - 4040:4040

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.22
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "tctl", "workflow", "list"]
      interval: 1s
      timeout: 5s
      retries: 30

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - TEMPORAL_CSRF_COOKIE_INSECURE=true
    image: temporalio/ui:2.21.3
    ports:
      - 8085:8080

  flow-api:
    container_name: flow_api
    build:
      context: .
      dockerfile: stacks/flow.Dockerfile
      target: flow-api
    ports:
      - 8112:8112
      - 8113:8113
    environment:
      <<: [*catalog-config, *flow-worker-env]
    depends_on:
      temporal-admin-tools:
        condition: service_healthy

  flow-snapshot-worker:
    container_name: flow-snapshot-worker
    build:
      context: .
      dockerfile: stacks/flow.Dockerfile
      target: flow-snapshot-worker
    environment:
      <<: [*flow-worker-env]
    depends_on:
      temporal-admin-tools:
        condition: service_healthy

  flow-worker1:
    container_name: flow-worker1
    build:
      context: .
      dockerfile: stacks/flow.Dockerfile
      target: flow-worker
    environment:
      <<: [*catalog-config, *flow-worker-env]
    depends_on:
      temporal-admin-tools:
        condition: service_healthy

  flow-worker2:
    container_name: flow-worker2
    build:
      context: .
      dockerfile: stacks/flow.Dockerfile
      target: flow-worker
    environment:
      <<: [*catalog-config, *flow-worker-env]
    profiles:
      - multi
    depends_on:
      temporal-admin-tools:
        condition: service_healthy

  flow-worker3:
    container_name: flow-worker3
    build:
      context: .
      dockerfile: stacks/flow.Dockerfile
      target: flow-worker
    environment:
      <<: [*catalog-config, *flow-worker-env]
    profiles:
      - multi
    depends_on:
      temporal-admin-tools:
        condition: service_healthy

  peerdb:
    container_name: peerdb-server
    stop_signal: SIGINT
    build:
      context: .
      dockerfile: stacks/peerdb-server.Dockerfile
    environment:
      <<: *catalog-config
      PEERDB_LOG_DIR: /var/log/peerdb
      PEERDB_PASSWORD: peerdb
      PEERDB_FLOW_SERVER_ADDRESS: grpc://flow_api:8112
      RUST_LOG: info
      RUST_BACKTRACE: 1
    ports:
      - 9900:9900
    depends_on:
      catalog:
        condition: service_healthy

  peerdb-ui:
    container_name: peerdb-ui
    build:
      context: .
      dockerfile: stacks/peerdb-ui.Dockerfile
    ports:
      - 3000:3000
    environment:
      <<: *catalog-config
      DATABASE_URL: postgres://postgres:postgres@catalog:5432/postgres
      PEERDB_FLOW_SERVER_HTTP: http://flow_api:8113

volumes:
  pgdata:
