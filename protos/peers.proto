syntax = "proto3";

package peerdb_peers;

message SSHConfig {
  string host = 1;
  uint32 port = 2;
  string user = 3;
  string password = 4;
  string private_key = 5;
  string host_key = 6;
}

message SnowflakeConfig {
  string account_id = 1;
  string username = 2;
  string private_key = 3;
  string database = 4;
  string warehouse = 6;
  string role = 7;
  uint64 query_timeout = 8;
  string s3_integration = 9;
  optional string password = 10;
  // defaults to _PEERDB_INTERNAL
  optional string metadata_schema = 11;
}

message BigqueryConfig {
  string auth_type = 1;
  string project_id = 2;
  string private_key_id = 3;
  string private_key = 4;
  string client_email = 5;
  string client_id = 6;
  string auth_uri = 7;
  string token_uri = 8;
  string auth_provider_x509_cert_url = 9;
  string client_x509_cert_url = 10;
  string dataset_id = 11;
}

message MongoConfig {
  string username = 1;
  string password = 2;
  string clusterurl = 3;
  int32 clusterport = 4;
  string database = 5;
}

message PostgresConfig {
  string host = 1;
  uint32 port = 2;
  string user = 3;
  string password = 4;
  string database = 5;
  // this is used only in query replication mode right now.
  string transaction_snapshot = 6;
  // defaults to _peerdb_internal
  optional string metadata_schema = 7;
  optional SSHConfig ssh_config = 8;
}

message EventHubConfig {
  string namespace = 1;
  string resource_group = 2;
  string location = 3;
  PostgresConfig metadata_db = 4;
  // if this is empty PeerDB uses `AZURE_SUBSCRIPTION_ID` environment variable.
  string subscription_id = 5;
  // defaults to 3
  uint32 partition_count = 6;
  // defaults to 7
  uint32 message_retention_in_days = 7;
}

message EventHubGroupConfig {
  // event hub peer name to event hub config
  map<string, EventHubConfig> eventhubs = 1;
  PostgresConfig metadata_db = 2;
  repeated string unnest_columns = 3;
}

message S3Config {
  string url = 1;
  optional string access_key_id = 2;
  optional string secret_access_key = 3;
  optional string role_arn = 4;
  optional string region = 5;
  optional string endpoint = 6;
  PostgresConfig metadata_db = 7;
}

message ClickhouseConfig{
  string host = 1;
  uint32 port = 2;
  string user = 3;
  string password = 4;
  string database = 5;
  string s3_integration = 6; // staging to store avro files
}

message SqlServerConfig {
  string server = 1;
  uint32 port = 2;
  string user = 3;
  string password = 4;
  string database = 5;
}

enum DBType {
  BIGQUERY = 0;
  SNOWFLAKE = 1;
  MONGO = 2;
  POSTGRES = 3;
  EVENTHUB = 4;
  S3 = 5;
  SQLSERVER = 6;
  EVENTHUB_GROUP = 7;
  CLICKHOUSE = 8;
}

message Peer {
  string name = 1;
  DBType type = 2;
  oneof config {
    SnowflakeConfig snowflake_config = 3;
    BigqueryConfig bigquery_config = 4;
    MongoConfig mongo_config = 5;
    PostgresConfig postgres_config = 6;
    EventHubConfig eventhub_config = 7;
    S3Config s3_config = 8;
    SqlServerConfig sqlserver_config = 9;
    EventHubGroupConfig eventhub_group_config = 10;
    ClickhouseConfig clickhouse_config = 11;
  }
}
