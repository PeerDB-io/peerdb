name: peerdb-quickstart-e2e

x-minio-config: &minio-config
  PEERDB_CLICKHOUSE_AWS_CREDENTIALS_AWS_ACCESS_KEY_ID: _peerdb_minioadmin
  PEERDB_CLICKHOUSE_AWS_CREDENTIALS_AWS_SECRET_ACCESS_KEY: _peerdb_minioadmin
  PEERDB_CLICKHOUSE_AWS_CREDENTIALS_AWS_REGION: us-east-1
  PEERDB_CLICKHOUSE_AWS_CREDENTIALS_AWS_ENDPOINT_URL_S3: http://host.docker.internal:9001
  PEERDB_CLICKHOUSE_AWS_S3_BUCKET_NAME: peerdbbucket

x-catalog-config: &catalog-config
  PEERDB_CATALOG_HOST: catalog-e2e
  PEERDB_CATALOG_PORT: 5432
  PEERDB_CATALOG_USER: postgres
  PEERDB_CATALOG_PASSWORD: postgres
  PEERDB_CATALOG_DATABASE: postgres

services:
  catalog-e2e:
    container_name: catalog-e2e
    image: postgres:17-alpine@sha256:fbe21607052bb5c298674f2fd8cf044a63aa3ddf50b81627f894f91f40f50bcb
    command: -c config_file=/etc/postgresql.conf
    ports:
      - 9901:5432
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_INITDB_ARGS: --locale=C.UTF-8
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - pgdata-e2e:/var/lib/postgresql/data
      - ./volumes/postgresql.conf:/etc/postgresql.conf
      - ./volumes/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 60s

  temporal-e2e:
    container_name: temporal-e2e
    depends_on:
      catalog-e2e:
        condition: service_healthy
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=postgres
      - POSTGRES_SEEDS=catalog-e2e
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:1.28@sha256:3ee84bf3ec5494f2be6ee0c1fea3b52684e50da3ddc5f997e6fa56ad340da9a8
    ports:
      - 7233:7233
    volumes:
      - ./volumes/temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
    labels:
      kompose.volume.type: configMap

  temporal-admin-tools-e2e:
    container_name: temporal-admin-tools-e2e
    depends_on:
      - temporal-e2e
    environment:
      - TEMPORAL_ADDRESS=temporal-e2e:7233
      - TEMPORAL_CLI_ADDRESS=temporal-e2e:7233
      - TEMPORAL_CLI_SHOW_STACKS=1
    image: temporalio/admin-tools:1.25.2-tctl-1.18.1-cli-1.1.1@sha256:da0c7a7982b571857173ab8f058e7f139b3054800abb4dcb100445d29a563ee8
    stdin_open: true
    tty: true
    entrypoint: /etc/temporal/entrypoint.sh
    restart: on-failure
    healthcheck:
      test: ["CMD", "tctl", "workflow", "list"]
      interval: 1s
      timeout: 5s
      retries: 30
    volumes:
      - ./scripts/mirror-name-search.sh:/etc/temporal/entrypoint.sh

  temporal-ui-e2e:
    container_name: temporal-ui-e2e
    depends_on:
      - temporal-e2e
    environment:
      - TEMPORAL_ADDRESS=temporal-e2e:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - TEMPORAL_CSRF_COOKIE_INSECURE=true
    image: temporalio/ui:2.39.0@sha256:b768f87f18b59663a6749e98a2f7782c266e8e4e4749f92248e2ba41d6330d3f
    ports:
      - 8085:8080

  peerdb-e2e:
    container_name: peerdb-server-e2e
    stop_signal: SIGINT
    build:
      context: .
      dockerfile: stacks/peerdb-server.Dockerfile
    environment:
      <<: *catalog-config
      PEERDB_PASSWORD: peerdb
      PEERDB_FLOW_SERVER_ADDRESS: grpc://flow_api:8112
      RUST_LOG: info
      RUST_BACKTRACE: 1
    ports:
      - 9900:9900
    depends_on:
      catalog-e2e:
        condition: service_healthy

  minio-e2e:
    image: bitnami/minio:2025.6.13
    volumes:
      - minio-data-e2e:/data
    ports:
      - "9001:9000"
      - "9002:36987"
    environment:
      MINIO_ROOT_USER: _peerdb_minioadmin
      MINIO_ROOT_PASSWORD: _peerdb_minioadmin
      MINIO_CONSOLE_PORT_NUMBER: 36987
      MINIO_DEFAULT_BUCKETS: peerdbbucket

  mysql-e2e:
    container_name: mysql-e2e
    build:
      context: .
      dockerfile: stacks/mysql.Dockerfile
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - mydata-e2e:/var/lib/mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"

  clickhouse-e2e:
    image: clickhouse/clickhouse-server
    ports:
      - 9000:9000
    environment:
      CLICKHOUSE_PASSWORD: example
    volumes:
      - chdata-e2e:/var/lib/clickhouse
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  pgdata-e2e:
    driver_opts:
      type: tmpfs
      device: tmpfs
  mydata-e2e:
    driver_opts:
      type: tmpfs
      device: tmpfs
  chdata-e2e:
    driver_opts:
      type: tmpfs
      device: tmpfs
  minio-data-e2e:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  default:
    name: peerdb_network
